[{"path":"/articles/web/blackbox.html","id":"random-forests","dir":"Articles > Web","previous_headings":"","what":"Random forests","title":"Forests, SVMs, etc.","text":"","code":"library(randomForest, quietly=TRUE) fit <- randomForest(Ozone ~ Solar.R + Wind + Temp, data=aq) visreg(fit, \"Temp\", ylab=\"Ozone\")"},{"path":"/articles/web/blackbox.html","id":"support-vector-machines","dir":"Articles > Web","previous_headings":"","what":"Support vector machines","title":"Forests, SVMs, etc.","text":"Note neither random forests support vector machines able provide confidence bands fitted values, shaded bands appear.","code":"library(e1071) fit <- svm(Ozone ~ Solar.R + Wind + Temp, data=aq) visreg(fit, \"Temp\", ylab=\"Ozone\")"},{"path":"/articles/web/blackbox.html","id":"gradient-boosted-trees","dir":"Articles > Web","previous_headings":"","what":"Gradient boosted trees","title":"Forests, SVMs, etc.","text":"implementation gradient boosted trees gbm package offer residuals method. normally cause visreg omit plotting partial residuals. However, can supply user-defined residuals method: useful aware general: ever working model class provide residuals method predict method, can always write . defined,  Note default settings gbm produce good fit . particular, default number trees (100) low capture relationship temperature ozone. increasing number trees, obtain much reasonable fit:  nice illustration visualizing “black box” method using visreg can provide insight setting tuning parameters methods.","code":"residuals.gbm <- function(fit) {fit$data$y - fit$fit} library(gbm) fit <- gbm(Ozone ~ Solar.R + Wind + Temp, data=aq, distribution=\"gaussian\") visreg(fit, \"Temp\", ylab=\"Ozone\") fit <- gbm(Ozone ~ Solar.R + Wind + Temp, data=aq, distribution=\"gaussian\", n.trees=5000) visreg(fit, \"Temp\", ylab=\"Ozone\")"},{"path":"/articles/web/cross.html","id":"options","dir":"Articles > Web","previous_headings":"","what":"Options","title":"Cross-sectional plots","text":"numeric variable, breaks argument controls values cross-sections taken. default, cross-sections taken three quantiles (10th, 50th, 90th), larger number can specified:  breaks vector numbers, specifies values cross-sections taken:","code":"visreg(fit, \"Heat\", by=\"Wind\", breaks=4, layout=c(4,1)) visreg(fit, \"Heat\", by=\"Wind\", breaks=c(seq(5, 15, 5)), layout=c(3,1))"},{"path":"/articles/web/cross.html","id":"graphical-options-lattice","dir":"Articles > Web","previous_headings":"","what":"Graphical options: lattice","title":"Cross-sectional plots","text":"mentioned , using lattice graphics engine, appearance plot can typically changed specifying appropriate lattice option, gets passed along visreg. One exception appearance lines, points, bands, specified just base plots:  Another exception strip option; visreg sets strip internally, interferes user passing strip option along lattice. visreg , however, explicitly provide strip.names option:  can also explicitly specify labels strip:  aspects strip’s appearance, background color, can set calls lattice package’s trellis.par.set:","code":"visreg(fit, \"Wind\", by=\"Heat\", layout=c(3,1), fill.par=list(col=\"#008DFF33\")) visreg(fit, \"Wind\", by=\"Heat\", layout=c(3,1), strip.names=TRUE) visreg(fit, \"Wind\", by=\"Heat\", layout=c(3,1), strip.names=c(\"Cold days\", \"Mild days\", \"Hot days\")) lattice::trellis.par.set(strip.background=list(col=\"gray90\")) visreg(fit, \"Wind\", by=\"Heat\", layout=c(3,1))"},{"path":"/articles/web/cross.html","id":"graphical-options-ggplot2","dir":"Articles > Web","previous_headings":"","what":"Graphical options: ggplot2","title":"Cross-sectional plots","text":"discussed ggplot2 page, ggplot2 options specified via additional components plot, :  exception, , appearance points/lines/bands, specified usual visreg arguments:","code":"visreg(fit, \"Wind\", by=\"Heat\", gg=TRUE) + theme_bw() visreg(fit, \"Wind\", by=\"Heat\", gg=TRUE, fill.par=list(fill=\"#008DFF33\"))"},{"path":"/articles/web/faq.html","id":"q-in-visreg2d-is-it-possible-to-superimpose-data-points-onto-the-plot","dir":"Articles > Web","previous_headings":"","what":"Q: In visreg2d, is it possible to superimpose data points onto the plot?","title":"Frequently asked questions","text":"Yes; ’s probably easiest using ggplot2 render surface:  can base R graphics , ’s kind complicated filled.contour() works way actually creates two plots, one main plot one plot legend:  axes admittedly weird – ’s idea; see ?filled.contour.","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp + I(Wind^2) + I(Temp^2) + I(Wind*Temp)+I(Wind*Temp^2) +            I(Temp*Wind^2) + I(Temp^2*Wind^2), data=airquality) visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"gg\") +   geom_point(aes(Wind, Temp), data=subset(airquality, !is.na(Ozone)), col='gray50') p <- quote({   axis(1, at = mx, labels = lx)   axis(2, at = my, labels = ly)   with(airquality, points(Wind, Temp, pch=19)) }) visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"image\", plot.axes=p)"},{"path":"/articles/web/faq.html","id":"q-does-visreg-work-with-gamm-mgcv-or-gamm4-objects","dir":"Articles > Web","previous_headings":"","what":"Q: Does visreg work with gamm (mgcv) or gamm4 objects?","title":"Frequently asked questions","text":"Yes, although takes minor workaround since objects unusual structure. First, let’s simulate data fit model (’m just using tibble convenience, isn’t relevant question): Now, fit$gam include call (.e., fit$gam$call NULL), means visreg won’t able find data: include manually:","code":"library(mgcv) library(tibble) n <- 20 Data <- tibble(   ID = factor(rep(LETTERS[1:n], each=5)),   x  = rnorm(n*5),   lp = rnorm(n)[as.numeric(ID)] + x^2 - 1,   p  = binomial()$linkinv(lp),   y  = rbinom(n*5, 1, p) ) fit <- gamm(y~s(x), data=Data, dist='binomial', random=list(ID=~1)) visreg(fit$gam, 'x') # Error in FUN(X[[i]], ...): object 'y' not found fit$gam$data <- Data visreg(fit$gam, 'x')"},{"path":"/articles/web/faq.html","id":"q-im-getting-the-following-error-message-error-in-usemethodfamily-no-applicable-method-for-family-applied-to-an-object-of-class-xxxx-","dir":"Articles > Web","previous_headings":"","what":"Q: I’m getting the following error message: Error in UseMethod(\"family\") : no applicable method for 'family' applied to an object of class XXXX.","title":"Frequently asked questions","text":"specify scale='response', ’re telling visreg automatically find transformation mapping linear predictor scale response. can fitted model object provides transformation family() method. Many R models (e.g., glm) , (e.g., glmmADMB package, gamm mgcv package) don’t. ’re working one models, ’ll supply transformation . example, model previous question, code fails: Since binomial model logistic link, binomial()$linkinv provides inverse transformation:","code":"visreg(fit$gam, 'x', scale='response') # Error in UseMethod(\"family\"): no applicable method for 'family' applied to an object of class \"gam\" visreg(fit$gam, 'x', trans=binomial()$linkinv, ylab=\"Probability\")"},{"path":"/articles/web/faq.html","id":"q-can-i-have-the-response-variable-on-the-horizontal-axis-instead-of-the-vertical-axis","dir":"Articles > Web","previous_headings":"","what":"Q: Can I have the response variable on the horizontal axis instead of the vertical axis?","title":"Frequently asked questions","text":"can achieve via ggplot2::coord_flip:","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality) visreg(fit, \"Wind\", gg=TRUE) + coord_flip()"},{"path":"/articles/web/glm.html","id":"scale","dir":"Articles > Web","previous_headings":"","what":"Scale","title":"Generalized linear models","text":"unique aspect GLMs link function joining linear predictors response – note vertical axis plot log-odds outcome, low birthweight . best scale examine residuals modeling assumption, , sense, scale modeling actually takes place (Mother’s weight assumed linear form model, plot linear). communicating modeling results, however, often useful transform outcome probability scale. can done manually specifying trans described transformations, although GLMs shortcut scale=\"response\" provided:","code":"visreg(fit, \"lwt\", scale=\"response\", rug=2, xlab=\"Mother's weight\", ylab=\"P(low birthweight)\")"},{"path":"/articles/web/glm.html","id":"partial-residuals","dir":"Articles > Web","previous_headings":"","what":"Partial residuals","title":"Generalized linear models","text":"Note default, visreg switches rug display rather show residuals transformation applied vertical axis. reason residuals useful examine linear predictor scale, can misleading transformed – moderate residual can appear huge transformation, vice versa. illustrate, suppose generate data Poisson distribution using log link: create artificial outlier: fit Poisson regression model: visualize visreg:  default visreg plot (left) clearly illustrates 49 observations fit model well, 50th big outlier. transforming response scale, can see exponential relationship x y. third plot, however, misleading – indicate several large positive outliers, obscures one actual outlier. worth mentioning visreg uses deviance residuals GLMs Cox proportional hazards models; symmetric residuals, thus, useful visually assessing problems fit.","code":"n <- 50 x <- seq(-5, 5, len=n) y <- rpois(n, lambda = exp(x)) y[which.max(x)] <- 0 fit <- glm(y ~ x, family=poisson) par(mfrow=c(1,3)) visreg(fit, \"x\") visreg(fit, \"x\", scale=\"response\") visreg(fit, \"x\", scale=\"response\", partial=TRUE)"},{"path":"/articles/web/mixed.html","id":"plotting-fixed-effects","dir":"Articles > Web","previous_headings":"","what":"Plotting fixed effects","title":"Mixed models","text":"mentioned , conditional plot lack confidence bands (due large number points, ’re making partial residuals smaller partially transparent):  , random effect terms drop contrast plot, bands :","code":"visreg(fit, \"Diet\", ylab=\"Protein\", points=list(col=\"#55555540\", cex=0.25)) visreg(fit, \"Diet\", type=\"contrast\", ylab=expression(Delta*'Protein'),         points=list(col=\"#55555540\", cex=0.25))"},{"path":"/articles/web/mixed.html","id":"plotting-random-effects","dir":"Articles > Web","previous_headings":"","what":"Plotting random effects","title":"Mixed models","text":"visreg package can also used plot random effects, although , plots include intervals. , plot modeled relationship protein content time cow. Two aspects code worth pointing : According object-oriented design visreg, predict method supplied lme4 used. option, re.form, control random effects used prediction, must passed visreg accordingly. sake space, ’m going subset plot ten cows rather 79. can accomplished returning, subsetting, raw visreg object prior plotting.  Returning data frames, estimates, confidence intervals, residuals used construction plots like allows users write extensions modifications visreg plots.","code":"v <- visreg(fit, \"Time\", by=\"Cow\", re.form=~(Time|Cow), plot=FALSE) subCow <- sample(levels(Milk$Cow), 10) vv <- subset(v, Cow %in% subCow) plot(vv, ylab=\"Protein\", layout=c(5,2))"},{"path":"/articles/web/options.html","id":"turning-onoff-plot-components","dir":"Articles > Web","previous_headings":"","what":"Turning on/off plot components","title":"Graphical options","text":"default, visreg includes fitted line, confidence bands, partial residuals, residuals bands can turned :   Note default, turn partial residuals, visreg tries display rug can least see observations . can turn :  Finally, option displaying separate rugs positive negative residuals top bottom axes, respectively, rug=2 (particularly useful logistic regression):","code":"visreg(fit, \"Wind\", band=FALSE) visreg(fit, \"Wind\", partial=FALSE) visreg(fit, \"Wind\", partial=FALSE, rug=FALSE) visreg(fit, \"Wind\", rug=2, partial=FALSE)"},{"path":"/articles/web/options.html","id":"jittering","dir":"Articles > Web","previous_headings":"","what":"Jittering","title":"Graphical options","text":"many ties numeric variable x, jittering can helpful way avoid overplotting:","code":"fit <- lm(Ozone ~ Solar.R + Wind + poly(Month, 2), data=airquality) visreg(fit, \"Month\") visreg(fit, \"Month\", jitter=TRUE)"},{"path":"/articles/web/options.html","id":"appearance-of-points-lines-and-bands","dir":"Articles > Web","previous_headings":"","what":"Appearance of points, lines, and bands","title":"Graphical options","text":"Specifying col='red' won’t work, visreg can’t know whether ’re trying change color line, band, points. options must specified separate parameters lists: line.par: Controls appearance fitted line fill.par: Controls appearance confidence band points.par: Controls appearance partial residuals can abbreviated, example :","code":"visreg(fit, \"Wind\", line=list(col=\"red\"),                     fill=list(col=\"green\"),                     points=list(cex=1.5, pch=1))"},{"path":"/articles/web/options.html","id":"generic-plot-options","dir":"Articles > Web","previous_headings":"","what":"Generic plot options","title":"Graphical options","text":"options get passed along plot, option normally pass plot, like main, work fine. ’s example includes bunch options like :","code":"fit <- lm(log(Ozone) ~ Solar.R + Wind + Temp, data=airquality) visreg(fit, \"Wind\", yaxt=\"n\", main=\"Ozone is bad for you\", bty=\"n\", ylab=\"Ozone\") at <- seq(1.5, 5, 0.5) lab <- round(exp(at), 1) axis(2, at=at, lab=lab, las=1)"},{"path":"/articles/web/options.html","id":"whitespace-for-factors","dir":"Articles > Web","previous_headings":"","what":"Whitespace for factors","title":"Graphical options","text":"x factor, whitespace option controls amount whitespace categories:","code":"fit <- lm(Ozone ~ Solar.R + Wind + Heat, data=airquality) par(mfrow=c(1,2)) visreg(fit, \"Heat\", whitespace=.1) visreg(fit, \"Heat\", whitespace=.5)"},{"path":"/articles/web/options.html","id":"subsetting-the-plot","dir":"Articles > Web","previous_headings":"","what":"Subsetting the plot","title":"Graphical options","text":"Occasionally, might want plot subset levels observations; can use subset accomplish :","code":"v <- visreg(fit, \"Wind\", by=\"Heat\", plot=FALSE) v1 <- subset(v, Heat %in% c(\"Cool\", \"Hot\")) plot(v1) v2 <- subset(v, Wind < 15) plot(v2, layout=c(3,1))"},{"path":"/articles/web/surface.html","id":"filled-contour-plots","dir":"Articles > Web","previous_headings":"","what":"Filled contour plots","title":"Surface plots","text":"default provide contoured image plot:  , wind temperature laid two-dimensional grid, colors used represent level ozone. legend provided left. R’s filled.contour function used generate plot, wish change options, need look ?filled.contour see correct syntax. example, want different colors,","code":"visreg2d(fit, \"Wind\", \"Temp\") visreg2d(fit, \"Wind\", \"Temp\", color.palette=colorRampPalette(c(\"black\", \"white\", \"purple\")))"},{"path":"/articles/web/surface.html","id":"perspective-plots","dir":"Articles > Web","previous_headings":"","what":"Perspective plots","title":"Surface plots","text":"option provided visreg2d represent surface three-dimensional image. can done static manner using type=\"persp\":  dynamically using type=\"rgl\": interactive rgl option, need install rgl package first.","code":"visreg2d(fit, \"Wind\", \"Temp\", plot.type=\"persp\") visreg2d(fit, \"Wind\", \"Temp\", plot.type=\"rgl\")"},{"path":"/articles/web/trans.html","id":"nonlinear-terms","dir":"Articles > Web","previous_headings":"","what":"Nonlinear terms","title":"Transformations","text":"example, suppose allow effect wind ozone nonlinear introducing quadratic term model:  Note visreg automatically detects nonlinear relationship represents correctly plot. work transformation can think ; examples:    ever run across kind transformation produces error visreg, please tell us fix ASAP.","code":"fit <- lm(Ozone ~ Solar.R + Wind + I(Wind^2) + Temp, data=airquality) visreg(fit, \"Wind\") fit <- lm(Ozone ~ Solar.R + Wind + Wind*I(Wind > 10) + Temp, data=airquality) visreg(fit, \"Wind\", print.cond=FALSE) fit <- lm(Ozone ~ Solar.R + poly(Wind, 3) + Temp, data=airquality) visreg(fit, \"Wind\") library(splines) fit <- lm(Ozone ~ Solar.R + ns(Wind, df=3) + Temp, data=airquality) visreg(fit, \"Wind\")"},{"path":"/articles/web/trans.html","id":"transformations-of-the-outcome","dir":"Articles > Web","previous_headings":"","what":"Transformations of the outcome","title":"Transformations","text":"Another kind nonlinear model arises outcome transformed, interested plotting relationship original scale. example, ozone levels must positive. However, GAM front page illustrates, models may result predictions confidence band fall 0. One way remedying model log ozone concentrations instead ozone concentrations directly:  Note , plotting involves inverse transformation. automatic way visreg know correct inverse transformation (except GLMs), must supplied function. Also note default, visreg turns partial residuals trans specified, can provide distorted view outliers (mild outlier can become extreme outlier transformation applied, vice versa), include explicitly specifying partial=TRUE. discussed greater depth page GLMs.","code":"fit <- lm(log(Ozone) ~ Solar.R + Wind + Temp, data=airquality) visreg(fit, \"Wind\", trans=exp, ylab=\"Ozone\", partial=TRUE)"},{"path":"/articles/web/trans.html","id":"combining-nonlinear-terms-with-transformations","dir":"Articles > Web","previous_headings":"","what":"Combining nonlinear terms with transformations","title":"Transformations","text":"one hope, nonlinear terms outcome transformations can combined visualized straightforward manner:","code":"fit <- lm(log(Ozone) ~ Solar.R + Wind + I(Wind^2) + Temp, data=airquality) visreg(fit, \"Wind\", trans=exp, ylab=\"Ozone\", partial=TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Breheny. Author, maintainer. Woodrow Burchett. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Breheny P Burchett W (2017). Visualization Regression Models Using visreg. R Journal, 9: 56-71.","code":"@Article{,   author = {Patrick Breheny and Woodrow Burchett},   title = {Visualization of Regression Models Using visreg},   journal = {The R Journal},   year = {2017},   volume = {9},   pages = {56--71},   number = {2}, }"},{"path":"/index.html","id":"visreg-visualization-of-regression-models","dir":"","previous_headings":"","what":"Visualization of Regression Models","title":"Visualization of Regression Models","text":"visreg R package displaying results fitted model terms predictor variable x affects outcome y. implementation visreg takes advantage object-oriented programming R, meaning works virtually type formula-based model R provided model class provides predict() method: lm, glm, gam, rlm, nlme, lmer, coxph, svm, randomForest many .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualization of Regression Models","text":"install latest release version CRAN: install latest development version GitHub:","code":"install.packages(\"visreg\") remotes::install_github(\"pbreheny/visreg\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualization of Regression Models","text":"basic usage fit model, example: pass visreg:  complex example, uses gam() function mgcv:  number options surface plots also provided, rgl plots: browser supports , able interact figure (click drag rotate). question feature request, please submit issue.","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality) visreg(fit, \"Wind\") airquality$Heat <- cut(airquality$Temp, 3, labels=c(\"Cool\", \"Mild\", \"Hot\")) fit <- gam(Ozone ~ s(Wind, by=Heat, sp=0.1), data=airquality) visreg(fit, \"Wind\", \"Heat\", gg=TRUE, ylab=\"Ozone\") library(splines) fit <- lm(Ozone ~ Solar.R +ns(Wind, df=2)*ns(Temp, df=2), data=airquality) visreg2d(fit, \"Wind\", \"Temp\", plot.type=\"rgl\")"},{"path":"/index.html","id":"more-information","dir":"","previous_headings":"","what":"More information","title":"Visualization of Regression Models","text":"documentation provided focuses syntax, options, user interface. details statistical methodology implementation, see: Breheny P Burchett W (2017). Visualization Regression Models Using visreg. R Journal, 9: 56-71.","code":""},{"path":"/reference/plot.visreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of regression functions — plot.visreg","title":"Visualization of regression functions — plot.visreg","text":"function visualizing regression models quickly easily. Default plots contain confidence band, prediction line, partial residuals.  Factors, transformations, conditioning, interactions, variety options supported.  plot.visreg function accepts visreg visregList object calculated visreg creates plot.","code":""},{"path":"/reference/plot.visreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of regression functions — plot.visreg","text":"","code":"# S3 method for visreg plot(x, overlay=FALSE, print.cond=FALSE, whitespace=0.2, partial=identical(x$meta$trans, I), band=TRUE, rug=ifelse(partial, 0, 2), strip.names=is.numeric(x$fit[,x$meta$by]), legend=TRUE, top=c('line', 'points'), gg=FALSE, line.par=NULL, fill.par=NULL, points.par=NULL, ...)"},{"path":"/reference/plot.visreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of regression functions — plot.visreg","text":"x visreg visregList object; see     visreg. overlay specified, default separate panels used     display cross-section.  overlay=TRUE,     cross-sections overlaid top single plot. print.cond print.cond=TRUE, explanatory variable values     conditioned conditional plot printed console     (default: FALSE). print.cond=TRUE     type=\"contrast\", conditions still printed,     bearing plot unless interactions present. whitespace xvar factor, whitespace determines amount     space factors x-axis.  Default 0.2, meaning     20 percent horizontal axis whitespace. partial partial=TRUE (default), partial residuals shown     plot. band band=TRUE (default), confidence bands shown     plot. rug default, partial residuals plotted.  Alternatively,     rug may plotted along horizontal axis instead.     Setting rug=TRUE turns partial residuals default;     one wants plotted, rug=TRUE     partial=TRUE need specified.  Two types rug plots     available.  rug=1 rug=TRUE, basic rug     drawn bottom.  rug=2, separate rugs     drawn top observations positive residuals     bottom observations negative residuals.  plots     particularly useful logistic regression (see examples). strip.names =TRUE, strip.names=TRUE adds name     variable strip top panel.  Default     FALSE factors TRUE numeric     variables.  strip.names can also character vector,     case replaces strip names altogether values chosen     user. legend overlay plots, (overlay=TRUE), visreg create     legend?  legend=TRUE (default), legend placed     top margin. top default, model fits 'line' plotted top     partial residuals; usually preferable, run     risk obscuring certain residuals.  change behavior     plot partial residuals top, specify top='points'. gg default (gg=FALSE), visreg use     lattice package render plot multiple panels     required.  gg=TRUE, use ggplot2 package     instead, provided installed. line.par List parameters (see par) pass     lines(...) lines drawn plots. fill.par List parameters (see par) pass     polygon(...) shaded confidence regions drawn     plots. points.par List parameters (see par) pass     points(...) partial residuals drawn plots. ... Graphical parameters can passed function customize     plots.  =TRUE, lattice parameters can passed,     layout (see examples ).","code":""},{"path":"/reference/plot.visreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of regression functions — plot.visreg","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":"/reference/plot.visreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of regression functions — plot.visreg","text":"Patrick Breheny Woodrow Burchett","code":""},{"path":[]},{"path":"/reference/plot.visreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of regression functions — plot.visreg","text":"","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp,data=airquality) visreg(fit, \"Wind\", line=list(col=\"red\"), points=list(cex=1, pch=1))  ## Changing appearance visreg(fit, \"Wind\", line=list(col=\"red\"), points=list(cex=1, pch=1))   ## See ?visreg and https://pbreheny.github.io/visreg for more examples"},{"path":"/reference/plot.visreg2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of regression functions for two variables — plot.visreg2d","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"Plot method visualizing two variables interact   affect response regression models.","code":""},{"path":"/reference/plot.visreg2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"","code":"# S3 method for visreg2d plot(x, plot.type=c(\"image\",\"persp\",\"rgl\", \"gg\"), xlab, ylab, zlab, color, print.cond=FALSE, whitespace=0.2, ...)"},{"path":"/reference/plot.visreg2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"x visreg2d object. plot.type style plot produced.  following three options     supported: 'image', filled contour plot. 'gg', filled contour plot using ggplot2. 'persp', 3 dimensional perspective plot. 'rgl', version perspective plot can       rotated. Note: requires rgl package use.  xlab Axis label x variable ylab Axis label y variable zlab Axis label outcome color plot.type='persp' plot.type='rgl',     color surface.  plot.type='image'     plot.type='gg', vector colors used establish     color palette. print.cond print.cond==TRUE, explanatory variable values     conditioned conditional plot printed console     (default: FALSE). print.cond==TRUE     type==\"contrast\", conditions still printed,     bearing plot unless interactions present. whitespace xvar yvar factor, whitespace determines     amount space factors.  Default 0.2, meaning     20 percent axis whitespace. ... Graphical parameters can passed function customize     plots.","code":""},{"path":"/reference/plot.visreg2d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":"/reference/plot.visreg2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"Patrick Breheny Woodrow Burchett","code":""},{"path":[]},{"path":"/reference/plot.visreg2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of regression functions for two variables — plot.visreg2d","text":"","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp + I(Wind^2) + I(Temp^2) + I(Wind*Temp)+I(Wind*Temp^2) + I(Temp*Wind^2) + I(Temp^2*Wind^2), data=airquality)  visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"image\")  visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"image\",          color=c(\"purple\", \"green\", \"red\"))  visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"persp\")   ## Requires the rgl package if (FALSE) { visreg2d(fit,x=\"Wind\",y=\"Temp\",plot.type=\"rgl\") }  ## Requires the ggplot2 package if (FALSE) { visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"gg\") }"},{"path":"/reference/subset-visreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a visreg object — subset.visreg","title":"Subset a visreg object — subset.visreg","text":"Subset visreg object portion full model plotted.","code":""},{"path":"/reference/subset-visreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a visreg object — subset.visreg","text":"","code":"# S3 method for visreg subset(x, sub, ...)"},{"path":"/reference/subset-visreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a visreg object — subset.visreg","text":"x visreg object. sub Logical expression indicating elements keep,     subset. ... used.","code":""},{"path":"/reference/subset-visreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a visreg object — subset.visreg","text":"","code":"# Fit a model and construct a visreg object airquality$Heat <- cut(airquality$Temp,3,labels=c(\"Cool\",\"Mild\",\"Hot\")) fit <- lm(Ozone~ Solar.R + Wind*Heat,data=airquality) v <- visreg(fit, \"Wind\", by=\"Heat\", plot=FALSE)  # Plot only certain levels vv <- subset(v, Heat %in% c(\"Cool\", \"Hot\")) plot(vv)   # Plot only up to wind 15 mph vv <- subset(v, Wind < 15) plot(vv)"},{"path":"/reference/visreg-faq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequently Asked Questions for visreg — visreg-faq","title":"Frequently Asked Questions for visreg — visreg-faq","text":"page tries answer questions get   asked often use visreg package.    question appear , can reached   <patrick-breheny@uiowa.edu>.","code":""},{"path":"/reference/visreg-faq.html","id":"frequent-asked-questions","dir":"Reference","previous_headings":"","what":"Frequent asked questions","title":"Frequently Asked Questions for visreg — visreg-faq","text":"difference 'conditional'       'contrast' plots? Suppose data looked like:  fit model fit <- lm(SBP~Sex+Age) want plot relationship Age SBP.      'conditional' plot illustrates relationship two,     conditional sex , say, Male (default visreg     choose common category). 'contrast' plot visreg, hand, illustrates     effect SBP change age -- default visreg     use mean age reference point change.  Since     model interaction, effect     men women, thus require specify     sex plot. conditional contrast plots answer subtly different     questions, useful different situations. Can visreg can used mixed models (.e.,       'nlme' 'lme4' packages)? Sort .  underlying basis visreg operates using     predict method plot predictions model.  Predictions     mixed models complicated.  particular,     se.fit option provided predict methods     nlme lme4 packages, obtain     confidence bands conditional plots.  Nevertheless, visreg     produce plots estimated coefficients partial residuals. addition, may certain nesting structures among     covariates visreg aware ; example,     trying plot effect age various individuals,     fixing sex sex=Male, may involve setting sex     female subjects Male sake plot.  Whether     plot meaning, judge .     general, contrast plots trustworthy     conditional plots, given intricacies setting conditions     hierarchical model. Keep mind depending sort predictions (BLUPs)     interested , may need manually control inclusion     random effects predictions.  default, visreg includes     random effects (.e., level=0 nlme models     re.form=NA lme4 models).  including     random effect variable visreg,     likely want add effects back ,     manually, directly specifying appropriate level     re.form argument predict (see ?predict.nlme     ?predict.merMod).  Handling appropriately     user's responsibility; hope automatically decide     possible mixed models passed visreg. mentioned , obtain confidence bands     conditional plots.  words authors lme4     package, \"option computing standard errors     predictions difficult define efficient method     incorporates uncertainty variance parameters\"; hence     se.fit option.  can, however, get confidence bands     'contrast' plots.  contrast plot, random effects     cancel issue avoided. running difficulty using visreg mixed     models, feel free e-mail ; mixed models less     extensively tested visreg fixed-effect models,     may still bugs work . use visreg model offset terms? default, visreg set provide conditional plots     terms set median value (common     category).  includes offset terms.  uncommon,     however, want see results offset included.  obtain     results, one needs specify offset among arguments     cond. example, using Insurance data MASS     package: utils::data(Insurance, package=\"MASS\")fit <- glm(Claims ~ District + Group + Age +       offset(log(Holders)), data = Insurance, family = poisson)visreg(fit, \"Group\", scale=\"response\") provide model's predictions expected number     claims given median number holders (, 136).  obtain     expected number claims per holder, need specify     Holders=1 cond: visreg(fit, \"Group\", scale=\"response\", cond=list(Holders=1)) Note also ensure proper functionality visreg's     options, use offset() function, rather     offset= argument, recommended. visreg work models fit package       XXX? visreg() relies able call certain generic     functions interface fitted model object passed     .  Specifically, fit fit model     passed visreg, following work: model.frame(fit)     formula(fit) , nothing can really     visreg end get work -- author package     need add support generic functions make     portable.  lines code work     visreg still fails, please let know -- perhaps     bug somewhere can fix.","code":""},{"path":"/reference/visreg-faq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Frequently Asked Questions for visreg — visreg-faq","text":"Patrick Breheny Woodrow Burchett Maintainer: Patrick Breheny <patrick-breheny@uiowa.edu>","code":""},{"path":"/reference/visreg-faq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Frequently Asked Questions for visreg — visreg-faq","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":"/reference/visreg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of regression models — visreg-package","title":"Visualization of regression models — visreg-package","text":"visreg provides number plotting functions   visualizing fitted regression models: regression functions, confidence   bands, partial residuals, interactions, .","code":""},{"path":"/reference/visreg-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualization of regression models — visreg-package","text":"package allows use visreg visreg2d, functions visualizing regression models.  See example basic use, help pages function details.  Also see cited manuscript additional details.  question feature request, please e-mail <patrick-breheny@uiowa.edu>.","code":""},{"path":"/reference/visreg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of regression models — visreg-package","text":"Patrick Breheny Woodrow Burchett Maintainer: Patrick Breheny <patrick-breheny@uiowa.edu>","code":""},{"path":"/reference/visreg-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of regression models — visreg-package","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":[]},{"path":"/reference/visreg-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of regression models — visreg-package","text":"","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality) visreg(fit, \"Wind\")"},{"path":"/reference/visreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of regression functions — visreg","title":"Visualization of regression functions — visreg","text":"function visualizing regression models quickly easily. Default plots contain confidence band, prediction line, partial residuals.  Factors, transformations, conditioning, interactions, variety options supported.  visreg function performs calculations , plot=TRUE (default), calculations passed plot.visreg plotting.","code":""},{"path":"/reference/visreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of regression functions — visreg","text":"","code":"visreg(fit, xvar, by, breaks=3, type=c(\"conditional\", \"contrast\"), data=NULL, trans=I, scale=c(\"linear\",\"response\"), xtrans,  alpha=.05, nn=101, cond=list(), jitter=FALSE, collapse=FALSE, plot=TRUE, ...)"},{"path":"/reference/visreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of regression functions — visreg","text":"fit fitted model object wish visualize.  object     'predict' 'model.frame' methods supported, including lm,     glm, gam, rlm, coxph, many . xvar Character string specifying variable put x-axis     plot.  continuous variables factors supported. (Optional) variable allowing divide plot     cross-sections based levels variable;     particularly useful visualizing models interactions.     Supplied character string.  Uses lattice package.      continuous variables factors supported. breaks continuous variable used option,     breaks argument controls values     cross-sections taken. default, cross-sections taken     10th, 50th, 90th quantiles.  breaks single     number, specifies number breaks.  breaks     vector numbers, specifies values     cross-sections taken.  partial residuals appears     exactly plot, panel closest . type type plot produced.  following options     supported: 'conditional' selected, plot returned shows     value variable x-axis change response     y-axis, holding variables constant (default,     median numeric variables common category factors). 'contrast' selected, plot returned shows effect     expected value response moving x variable away     reference point x-axis (numeric variables,     taken mean). details, see references. data data frame used fit model.  Typically, visreg() can     figure data , necessary provide     .  cases, however, data set located     must supplied explicitly. trans (Optional) function specifying transformation vertical     axis. scale default, model plotted scale linear     predictor.  scale='response' glm, inverse link     function applied model plotted scale     original response. xtrans (Optional) function specifying transformation horizontal     axis.  Note , model terms log(x), visreg     automatically plots original axis (see examples). alpha Alpha level (1-coverage) confidence band displayed     plot (default: 0.05). nn Controls smoothness line confidence band.  Increasing     number add computational burden, produce     smoother plot (default: 101). cond Named list specifying conditional values explanatory     variables. default, conditional plots visreg constructed     filling explanatory variables median (    numeric variables) common category (factors),     can overridden specifying values using cond (see     examples). jitter Adds small amount noise xvar.  Potentially useful     many observations exactly value.  Default FALSE. collapse predict method fit returns matrix,     returns multiple visreg objects bound together list     (collapse=FALSE) collapsed single visreg     object (collapse=TRUE). plot Send calculations plot.visreg?  Default     TRUE. ... Graphical parameters (e.g., ylab) can passed     function customize plots.  =TRUE, lattice     parameters can passed, layout (see examples ).","code":""},{"path":"/reference/visreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualization of regression functions — visreg","text":"See plot.visreg plotting options, changing   appearance points, lines, confidence bands, etc.","code":""},{"path":"/reference/visreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of regression functions — visreg","text":"visreg visregList object (simply list     visreg objects).  visreg object three     components: fit data frame nn rows containing fit     model xvar varies, along lower upper confidence     bounds (named visregFit, visregLwr,     visregUpr, respectively). fitted matrix coefficients. res data frame n rows, n     number observations original data set used model.      frame contains information residuals, named     visregReg visregPos; latter records whether     residual positive negative. meta Contains meta-information needed construct plots,     name x y variables, whether     variables, etc.","code":""},{"path":"/reference/visreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of regression functions — visreg","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":"/reference/visreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of regression functions — visreg","text":"Patrick Breheny Woodrow Burchett","code":""},{"path":[]},{"path":"/reference/visreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of regression functions — visreg","text":"","code":"################### ## Linear models ## ###################  ## Basic fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality) visreg(fit)    visreg(fit, \"Wind\", type=\"contrast\")  visreg(fit, \"Wind\", type=\"conditional\")   ## Factors airquality$Heat <- cut(airquality$Temp, 3, labels=c(\"Cool\",\"Mild\",\"Hot\")) fit.heat <- lm(Ozone ~ Solar.R + Wind + Heat, data=airquality) visreg(fit.heat, \"Heat\", type=\"contrast\")  visreg(fit.heat, \"Heat\", type=\"conditional\")   ## Transformations fit1 <- lm(Ozone ~ Solar.R + Wind + Temp + I(Wind^2), data=airquality) fit2 <- lm(log(Ozone) ~ Solar.R + Wind + Temp, data=airquality) fit3 <- lm(log(Ozone) ~ Solar.R + Wind + Temp + I(Wind^2), data=airquality) visreg(fit1, \"Wind\")  visreg(fit2, \"Wind\", trans=exp, ylab=\"Ozone\")  visreg(fit3, \"Wind\", trans=exp, ylab=\"Ozone\")   ## Conditioning visreg(fit, \"Wind\", cond=list(Temp=50))  visreg(fit, \"Wind\", print.cond=TRUE) #> Conditions used in construction of plot #> Solar.R: 207 #> Temp: 79  visreg(fit, \"Wind\", cond=list(Temp=100))   ## Interactions fit.in1 <- lm(Ozone~ Solar.R + Wind*Heat, data=airquality) visreg(fit.in1, \"Wind\", by=\"Heat\")  visreg(fit.in1, \"Heat\", by=\"Wind\")  visreg(fit.in1, \"Wind\", by=\"Heat\", type=\"contrast\")  visreg(fit.in1, \"Heat\", by=\"Wind\", breaks=6)  visreg(fit.in1, \"Heat\", by=\"Wind\", breaks=c(0,10,20))   ## Overlay visreg(fit.in1, \"Wind\", by=\"Heat\", overlay=TRUE)   ###################### ## Nonlinear models ## ######################  ## Logistic regression data(\"birthwt\", package=\"MASS\") birthwt$race <- factor(birthwt$race, labels=c(\"White\",\"Black\",\"Other\")) birthwt$smoke <- factor(birthwt$smoke, labels=c(\"Nonsmoker\",\"Smoker\")) fit <- glm(low~age+race+smoke+lwt, data=birthwt, family=\"binomial\") visreg(fit, \"lwt\",        xlab=\"Mother's Weight\", ylab=\"Log odds (low birthweight)\")  visreg(fit, \"lwt\", scale=\"response\", partial=FALSE,        xlab=\"Mother's Weight\", ylab=\"P(low birthweight)\") visreg(fit, \"lwt\", scale=\"response\", partial=FALSE,        xlab=\"Mother's Weight\", ylab=\"P(low birthweight)\", rug=2)   ## Proportional hazards require(survival) #> Loading required package: survival data(ovarian) #> Warning: data set ‘ovarian’ not found ovarian$rx <- factor(ovarian$rx) fit <- coxph(Surv(futime, fustat) ~ age + rx, data=ovarian) visreg(fit, \"age\", ylab=\"log(Hazard ratio)\")   ## Robust regression require(MASS) #> Loading required package: MASS fit <- rlm(Ozone ~ Solar.R + Wind*Heat, data=airquality) visreg(fit, \"Wind\", cond=list(Heat=\"Mild\")) #> Warning:   Note that you are attempting to plot a 'main effect' in a model that contains an #>   interaction.  This is potentially misleading; you may wish to consider using the 'by' #>   argument. #> Conditions used in construction of plot #> Solar.R: 207 #> Heat: Mild  ## And more...; anything with a 'predict' method should work  ## Return raw components of plot v <- visreg(fit, \"Wind\", cond=list(Heat=\"Mild\")) #> Warning:   Note that you are attempting to plot a 'main effect' in a model that contains an #>   interaction.  This is potentially misleading; you may wish to consider using the 'by' #>   argument. #> Conditions used in construction of plot #> Solar.R: 207 #> Heat: Mild"},{"path":"/reference/visreg2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of regression functions for two variables — visreg2d","title":"Visualization of regression functions for two variables — visreg2d","text":"function used visualize two variables interact affect response regression models.","code":""},{"path":"/reference/visreg2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of regression functions for two variables — visreg2d","text":"","code":"visreg2d(fit, xvar, yvar, type=c(\"conditional\", \"contrast\"), data=NULL, trans=I, scale=c(\"linear\", \"response\"), nn=99, cond=list(), plot=TRUE, ...)"},{"path":"/reference/visreg2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of regression functions for two variables — visreg2d","text":"fit fitted model object wish visualize.  object      'predict' 'model.frame' methods supported, including lm,     glm, gam, rlm, coxph, many . xvar Character string specifying variable put x-axis     plot.  continuous variables factors supported. yvar Character string specifying variable put y-axis     plot.  continuous variables factors supported. type type plot produced.  following options     supported: 'conditional' selected, plot returned shows     value variable x-axis change response     y-axis, holding variables constant (default,     median numeric variables common category factors). 'contrast' selected, plot returned shows effect     expected value response moving x variable away     reference point x-axis (numeric variables,     taken mean). details, see references. data data frame used fit model.  Typically, visreg() can     figure data , necessary provide     .  cases, however, data set located     must supplied explicitly. trans (Optional) function specifying transformation vertical     axis. scale default, model plotted scale linear     predictor.  scale='response' glm, inverse link     function applied model plotted scale     original response. nn Resolution three dimensional plot.  Higher values     results smoother looking plot. cond Named list specifying conditional values explanatory     variables. default, conditional plots visreg constructed     filling explanatory variables median (    numeric variables) common category (factors),     can overridden specifying values using cond (see     examples). plot Send calculations plot.visreg2d, producing     plot?  Default TRUE. ... Graphical parameters (e.g., ylab) can passed     function customize plots.","code":""},{"path":"/reference/visreg2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of regression functions for two variables — visreg2d","text":"visreg2d object consisting : x Values xvar plotted y Values yvar plotted z Values outcome plotted meta Meta-information needed construct plots,     name x y variables.","code":""},{"path":"/reference/visreg2d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of regression functions for two variables — visreg2d","text":"https://pbreheny.github.io/visreg Breheny, P. Burchett, W. (2017), Visualizing regression     models using visreg.     https://journal.r-project.org/archive/2017/RJ-2017-046/index.html","code":""},{"path":"/reference/visreg2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of regression functions for two variables — visreg2d","text":"Patrick Breheny Woodrow Burchett","code":""},{"path":[]},{"path":"/reference/visreg2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of regression functions for two variables — visreg2d","text":"","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp + I(Wind^2) + I(Temp^2) + I(Wind*Temp)+I(Wind*Temp^2) + I(Temp*Wind^2) + I(Temp^2*Wind^2), data=airquality)  visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"image\")  visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"persp\")   ## Requires the rgl package if (FALSE) { visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"rgl\") }  ## Requires the ggplot2 package if (FALSE) { visreg2d(fit, x=\"Wind\", y=\"Temp\", plot.type=\"gg\") }"},{"path":"/reference/visregList.html","id":null,"dir":"Reference","previous_headings":"","what":"Join multiple visreg objects together in a list — visregList","title":"Join multiple visreg objects together in a list — visregList","text":"function takes multiple visreg objects, separate calls visreg(), joins together single object.  single object type visregList unless collapse=TRUE specified, case list collapsed back single visreg object.","code":""},{"path":"/reference/visregList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join multiple visreg objects together in a list — visregList","text":"","code":"visregList(..., labels, collapse=FALSE)"},{"path":"/reference/visregList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join multiple visreg objects together in a list — visregList","text":"... visreg objects, produced calls visreg. labels character vector length corresponding number visreg     objects passed function provides labels different     objects subsequent plots.  effect collapse=TRUE. collapse TRUE, resulting object collapsed single     visreg object.  FALSE, resulting object     visregList.","code":""},{"path":"/reference/visregList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join multiple visreg objects together in a list — visregList","text":"visreg visregList object, depending value collapse.","code":""},{"path":"/reference/visregList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join multiple visreg objects together in a list — visregList","text":"Patrick Breheny","code":""},{"path":[]},{"path":"/reference/visregList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join multiple visreg objects together in a list — visregList","text":"","code":"fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality) v1 <- visreg(fit, \"Wind\", plot=FALSE, alpha=0.2) v2 <- visreg(fit, \"Wind\", plot=FALSE, alpha=0.01) vv1 <- visregList(v1, v2, collapse=FALSE) vv2 <- visregList(v1, v2, collapse=TRUE,                   labels=c(\"Confidence: 0.80\", \"Confidence: 0.99\")) op <- par(mfrow=c(1,2)) plot(vv1)  par(op) plot(vv2)"},{"path":"/news/index.html","id":"visreg-270-2020-06-04","dir":"Changelog","previous_headings":"","what":"visreg 2.7.0 (2020-06-04)","title":"visreg 2.7.0 (2020-06-04)","text":"CRAN release: 2020-06-04 Changed: Plots now constructed consistent order across varieties (lattice, base, gg, overlay, etc.), lines top (fixes #50) New: Option change default layering top=“points” Fixed: Resolved namespace issue factor plots using lattice Fixed: Explicitly convert factor (longer automatic R 4.0) Fixed: strip.names rug colors now work correctly ggplot (fixes #85)","code":""},{"path":"/news/index.html","id":"visreg-261-2020-03-13","dir":"Changelog","previous_headings":"","what":"visreg 2.6.1 (2020-03-13)","title":"visreg 2.6.1 (2020-03-13)","text":"CRAN release: 2020-03-13 Fixed: Better handling S4 formulas data Fixed: xlim longer used setting visreg object; fixes #81 Changed: Added warning user attempts combine contrast transformation; fixes #78 Internal: Various internal changes cleaner, reliable code New version numbering system","code":""},{"path":"/news/index.html","id":"visreg-26-0-2019-11-27","dir":"Changelog","previous_headings":"","what":"visreg 2.6-0 (2019-11-27)","title":"visreg 2.6-0 (2019-11-27)","text":"CRAN release: 2019-11-27 New: visreg(), visreg2d() now accept data= option explicit data passing Fixed: coxph models now work update() required (#76) Fixed: Improved formula parsing (now uses .vars) Changed: plot.visreg2d() now returns transformation matrix persp plots Internal: TravisCI now used automatic testing Internal: consistent handling matrix outcome (mlm)","code":""},{"path":"/news/index.html","id":"visreg-25-1-2019-06-26","dir":"Changelog","previous_headings":"","what":"visreg 2.5-1 (2019-06-26)","title":"visreg 2.5-1 (2019-06-26)","text":"CRAN release: 2019-06-27 Fixed: Restoring compatibility current version quantreg Fixed: Restoring compatibility current version survey","code":""},{"path":"/news/index.html","id":"visreg-25-0-2018-02-26","dir":"Changelog","previous_headings":"","what":"visreg 2.5-0 (2018-02-26)","title":"visreg 2.5-0 (2018-02-26)","text":"CRAN release: 2018-02-26 New: Overlay now works gg plots New: gg option visreg2d New: Improved support betareg models New: Support polr models Changed: visreg2d now split calculation plotting functions Changed: vignette now HTML instead PDF Fixed: Formula parser now handles nested parentheses Fixed: Multi-reponse models missing residuals() methods Fixed: Rugs now work gg plots Fixed: Formula parsing strata() coxph models","code":""},{"path":"/news/index.html","id":"visreg-24-1-2017-06-23","dir":"Changelog","previous_headings":"","what":"visreg 2.4-1 (2017-06-23)","title":"visreg 2.4-1 (2017-06-23)","text":"CRAN release: 2017-06-23 New: Can now specify reference level contrast plots including x variable ‘cond’ list (thank GitHub@jealie implementing !) Changed: Default transformed outcomes now rug=2 Changed: Default color persp plot Changed: visreg(fit) longer plots constant objects Changed: Appearance strip names numeric ‘’ variables Fixed: plot.visreg wasn’t plotting gg objects default Fixed: Bug formula parsing w/ complicated interactions Fixed: Bugs ggFactorPlot Fixed: print.cond warning using warning() instead printing text","code":""},{"path":"/news/index.html","id":"visreg-24-0-2017-06-09","dir":"Changelog","previous_headings":"","what":"visreg 2.4-0 (2017-06-09)","title":"visreg 2.4-0 (2017-06-09)","text":"CRAN release: 2017-06-09 New: gg=TRUE works regular plots, just cross-sectional plots New: gg=TRUE returns gg object, can manipulated Fixed: bug coxph models type=‘contrast’","code":""},{"path":"/news/index.html","id":"visreg-23-0-2016-07-30","dir":"Changelog","previous_headings":"","what":"visreg 2.3-0 (2016-07-30)","title":"visreg 2.3-0 (2016-07-30)","text":"CRAN release: 2016-07-30 New: Added support multi-response models multinom, accompanying visregList() function collapse option control/options New: Added option use ggplot2 instead lattice produce multi-panel plots New: Support glmmADMB models Documentation: Added quick-start vignette Fixed: Bug user options passed axis() horizontal axis factor Fixed: Bug rounding legend overlay plots numeric variable Changed: Partial residuals now top lines hidden Internal: Reorganized greatly expanded suite tests Fixed: Now handles mlm objects y names Fixed: Now handles gamm4 models Fixed: issues svm models (package: e1071)","code":""},{"path":"/news/index.html","id":"visreg-22-2-2016-02-06","dir":"Changelog","previous_headings":"","what":"visreg 2.2-2 (2016-02-06)","title":"visreg 2.2-2 (2016-02-06)","text":"CRAN release: 2016-02-06 Fixed: bug involving incompatibility formulas . formulas s() (2.2-1 extended visreg formulas ., broke compatibility formulas s() similar terms)","code":""},{"path":"/news/index.html","id":"visreg-22-1-2016-01-05","dir":"Changelog","previous_headings":"","what":"visreg 2.2-1 (2016-01-05)","title":"visreg 2.2-1 (2016-01-05)","text":"CRAN release: 2016-01-05 New: Improved support packages provide residuals() generic Changed: Deviance residuals now used ‘coxph’ (survival) models instead martingale residuals Internal: Changes NAMESPACE compatibility development versions R Fixed: Now compatible ‘quantreg’ ‘betareg’ packages","code":""},{"path":"/news/index.html","id":"visreg-22-0-2015-04-22","dir":"Changelog","previous_headings":"","what":"visreg 2.2-0 (2015-04-22)","title":"visreg 2.2-0 (2015-04-22)","text":"CRAN release: 2015-04-22 New: Added support random forests ‘randomForest’ package New: Added support models ‘rms’ package","code":""},{"path":"/news/index.html","id":"visreg-21-1-2015-02-25","dir":"Changelog","previous_headings":"","what":"visreg 2.1-1 (2015-02-25)","title":"visreg 2.1-1 (2015-02-25)","text":"CRAN release: 2015-02-25 New: plot.visreg can now return trellis objects can arrange multiple trellis plots liking. Fixed: Contrast plots now work lme4 models Fixed: Survival examples longer depend splines","code":""},{"path":"/news/index.html","id":"visreg-21-0-2014-11-27","dir":"Changelog","previous_headings":"","what":"visreg 2.1-0 (2014-11-27)","title":"visreg 2.1-0 (2014-11-27)","text":"CRAN release: 2014-11-27 New: visreg now returns simple, structured objects user can modify inspect prior plotting Internal: Major overhaul visreg’s internal structure Internal: visreg() now separated plot.visreg() Fixed: Improved formula parsing now works properly te() ti() models (mgcv), pspline models (survival), complex formulas lme4, (thank Andrew Vitale giving good, complex model formula test ) Fixed: strip.names now works factors shingles overlay lattice plots (thank Dan Silver pointing ).","code":""},{"path":"/news/index.html","id":"visreg-20-6-2015-08-26","dir":"Changelog","previous_headings":"","what":"visreg 2.0-6 (2015-08-26)","title":"visreg 2.0-6 (2015-08-26)","text":"CRAN release: 2014-08-26 Changed: Rugs now plotted default instead partial residuals transformation applied Fixed: Issue S4 models compatible .formula(); visreg now refrains calling .formula (thank Nick Livingston bringing issue attention)","code":""},{"path":"/news/index.html","id":"visreg-20-5-2014-05-30","dir":"Changelog","previous_headings":"","what":"visreg 2.0-5 (2014-05-30)","title":"visreg 2.0-5 (2014-05-30)","text":"CRAN release: 2014-05-30 Fixed: Bug arising passing plot options ‘xlim’ used conjunction lme4 models; thank Vincent Maire pointing bug ","code":""},{"path":"/news/index.html","id":"visreg-20-4-2013-10-29","dir":"Changelog","previous_headings":"","what":"visreg 2.0-4 (2013-10-29)","title":"visreg 2.0-4 (2013-10-29)","text":"CRAN release: 2013-10-29 New: Added compatibility models ‘lme4’ package; tThank Jack Hogg pointing incompatibility (limitations regarding error bands ‘lme’ models)","code":""},{"path":"/news/index.html","id":"visreg-20-3-2013-09-27","dir":"Changelog","previous_headings":"","what":"visreg 2.0-3 (2013-09-27)","title":"visreg 2.0-3 (2013-09-27)","text":"CRAN release: 2013-09-27 New: Added compatibility ‘lme’ models; conditional models still include error bands due lack feature predict.lme, package produce reasonable plots means partial residuals (Thank Jason Rohr pointing incompatibility bugs ) New: Pption manually relabel panel strips Fixed: Bug passing ‘scales’ latticePlot Fixed: Bug trying panel every unique value ‘’ variable","code":""},{"path":"/news/index.html","id":"visreg-20-2-2013-08-28","dir":"Changelog","previous_headings":"","what":"visreg 2.0-2 (2013-08-28)","title":"visreg 2.0-2 (2013-08-28)","text":"CRAN release: 2013-08-28 New: Compatible output ‘survey’ package; thank Marco Pomati pointing incompatibility Internal: Fixed calling generics compatible changes R version 3.1 Fixed: Bug mlm models users received incorrect warning residuals Fixed: Improved generalizability fillFrame factors; incompatible instances predict()","code":""},{"path":"/news/index.html","id":"visreg-20-1-2013-08-10","dir":"Changelog","previous_headings":"","what":"visreg 2.0-1 (2013-08-10)","title":"visreg 2.0-1 (2013-08-10)","text":"CRAN release: 2013-08-10 Fixed: Bug spline models variables ‘.’ names Fixed: Bug survival models Surv object created outside call visreg Fixed: Levels factor longer dropped model; thank Johannes Kutsam pointing Fixed: Scoping issue resolved – can now call visreg, visreg2d function without fit data present global environment; thank Johannes Kutsam pointing ","code":""},{"path":"/news/index.html","id":"visreg-20-0-2013-05-23","dir":"Changelog","previous_headings":"","what":"visreg 2.0-0 (2013-05-23)","title":"visreg 2.0-0 (2013-05-23)","text":"CRAN release: 2013-05-23 New: Added ‘overlay’ option New: Extrapolation now allowed New: print.cond option, warning user tries plot main effect presence interactions New: ‘rug’ option New: ‘band’ option suppress confidence bands New: ‘ask’ option turn prompting starting new page plots Changed: Changed ‘breaks’ handled continuous ‘’ variables, setup appearance, option directly specify breaks occur Fixed: Bug models called ‘subset’ option Fixed: Minor bug passing lattice options Internal: Substantial internal refactoring separate calculations / model manipulations plotting Internal: Expanded suite tests","code":""},{"path":"/news/index.html","id":"visreg-12-1-2013-02-21","dir":"Changelog","previous_headings":"","what":"visreg 1.2-1 (2013-02-21)","title":"visreg 1.2-1 (2013-02-21)","text":"CRAN release: 2013-02-21 Fixed: Bug calculation confidence bands quasilikelihood models; thank Ariel Muldoon pointing Fixed: Side-effect caused trellis settings changed visreg changed internally","code":""},{"path":"/news/index.html","id":"visreg-12-0-2013-01-20","dir":"Changelog","previous_headings":"","what":"visreg 1.2-0 (2013-01-20)","title":"visreg 1.2-0 (2013-01-20)","text":"CRAN release: 2013-01-20 New: Support models ‘gam’ package New: Improved support ‘coxph’ models ‘survival’ package Fixed: Bug ‘removeFormulaFormatting’ allow compatibility splines use ‘cond’ Fixed: Bug use ns/bs type=‘effect’","code":""},{"path":"/news/index.html","id":"visreg-11-1-2012-11-14","dir":"Changelog","previous_headings":"","what":"visreg 1.1-1 (2012-11-14)","title":"visreg 1.1-1 (2012-11-14)","text":"CRAN release: 2012-11-14 Fixed: Bug ‘removeFormulaFormatting’; now compatible ns() bs() ‘splines’ package","code":""},{"path":"/news/index.html","id":"visreg-11-0-2012-09-28","dir":"Changelog","previous_headings":"","what":"visreg 1.1-0 (2012-09-28)","title":"visreg 1.1-0 (2012-09-28)","text":"CRAN release: 2012-09-28 New: Finer control plots line.par, fill.par, points.par New: Support multiple response (class ‘mlm’) models Fixed: Bug ‘ask’ behavior multiple plots created Fixed: Bug formatting names locfit objects Fixed: Bug visregFactorPanel partial=FALSE Changed: Default ylabels now las=1 (always horizontal); thank Doug Bates advice","code":""},{"path":"/news/index.html","id":"visreg-10-0-2012-05-31","dir":"Changelog","previous_headings":"","what":"visreg 1.0-0 (2012-05-31)","title":"visreg 1.0-0 (2012-05-31)","text":"CRAN release: 2012-05-31 New: Now CRAN! Extensive revision implementation ‘x’ can now categorical interactions/conditioning allowed Interface/options consistent visreg Internal refactoring share code visreg visreg2d Works now glm/rlm/gam/etc. New: Option display panel strip names T/F New: Improved support gam/locfit models Changed: Default (contrast/conditional) coxph models Changed: Default ‘ylim’ now depends ‘partial’ argument Changed: Added padding xlim/ylim lattice plots Changed: Default ‘ylab’: Delta added effect plot Deprecated: ‘fill’ option; always median fill now Fixed: Bug ‘ask’ behavior multple plots created Fixed: Bug coxph contrast plots Fixed: Patched ‘get_all_vars’ bug variables environment rather data frame","code":""},{"path":"/news/index.html","id":"visreg-04-0-2012-02-18","dir":"Changelog","previous_headings":"","what":"visreg 0.4-0 (2012-02-18)","title":"visreg 0.4-0 (2012-02-18)","text":"Internal: New ‘setupCond’ function handle setting cond ‘’ variables present Internal: New functions ‘visregPlot’ ‘visregLatticePlot’ separate work done two types plots (‘’ present absent) Internal: New function getXY shared code Changed: Handling whitespace ‘x’ factor Changed: Default ‘ylab’ changed always name response variable; virtually impossible presense transformations, link functions, etc., automatically choose appropriate name Fixed: Plotting options now pass lattice correctly Fixed: ylim lattice plots Fixed: xtrans lattice Changed: Manner cross-sections taken ‘’ numeric; number observations cross-section now even","code":""},{"path":"/news/index.html","id":"visreg-03-0-2011-12-03","dir":"Changelog","previous_headings":"","what":"visreg 0.3-0 (2011-12-03)","title":"visreg 0.3-0 (2011-12-03)","text":"New: Added ‘jitter’ option New: Improved handling trellis parameters Internal: Reorganized frame construction , using ‘get_all_vars’; now works missing data various strange situations f(x) model x isn’t","code":""},{"path":"/news/index.html","id":"visreg-02-0-2011-08-23","dir":"Changelog","previous_headings":"","what":"visreg 0.2-0 (2011-08-23)","title":"visreg 0.2-0 (2011-08-23)","text":"New: Added ‘’ argument support interactions New: visreg() now returns ‘x’ ‘y’ invisibly New: Added ‘scale’ option GLMs Internal: Reorganized frame construction, using ‘extract.frame’ Changed: Default behavior CI widths make compatible coxph models Changed: Resolved type/type2 conflict visreg2d ‘plot.type’ option Documentation: Added documentation","code":""},{"path":"/news/index.html","id":"visreg-01-0-2011-07-22","dir":"Changelog","previous_headings":"","what":"visreg 0.1-0 (2011-07-22)","title":"visreg 0.1-0 (2011-07-22)","text":"New: Added glm suport New: Added factor support 1d version New: Added “terms” option 2d plots New: Added ‘cond’ option setting specific predictor variables New: ‘partial’ ‘xtrans’ options Changed: common instance factor now chosen default model includes factors Fixed: Bug transformations 2d plots Fixed: Bug occurs model fit without supplying data frame (.e., variables global environment) Fixed: Bug occurs variable class ‘logical’","code":""},{"path":"/news/index.html","id":"visreg-00-3-2011-07-02","dir":"Changelog","previous_headings":"","what":"visreg 0.0-3 (2011-07-02)","title":"visreg 0.0-3 (2011-07-02)","text":"New: ‘trans’ option transforming response variable Intenal: Changed internal data frame evaluation, allowing ability lookup variables original data frame constructing derived variables","code":""},{"path":"/news/index.html","id":"visreg-00-2-2011-06-24","dir":"Changelog","previous_headings":"","what":"visreg 0.0-2 (2011-06-24)","title":"visreg 0.0-2 (2011-06-24)","text":"New: fill=‘median’ option","code":""},{"path":"/news/index.html","id":"visreg-00-1-2011-06-09","dir":"Changelog","previous_headings":"","what":"visreg 0.0-1 (2011-06-09)","title":"visreg 0.0-1 (2011-06-09)","text":"New: ‘type’ option visreg, allowing conditional contrast plots New: fill=‘zero’ option Changed: Default y label visreg","code":""},{"path":"/news/index.html","id":"visreg-00-0-2011-05-12","dir":"Changelog","previous_headings":"","what":"visreg 0.0-0 (2011-05-12)","title":"visreg 0.0-0 (2011-05-12)","text":"New: Package infrastructure established New: visreg.R, visreg2d.R: Polynomial terms handled correctly","code":""}]
